---
import TheatreSearchBar from "@components/TheatreSearchBar";
import TheatreCategoryView, { fetchData } from "./TheatreCategoryView";
import ClientAPIs from "./ClientAPIs.astro";
import styles from "@styles/TheatreCategory.module.scss";
import ThemeSelect from "./ThemeSelect.astro";
import { theatreAPI } from "@lib/theatre";
import ArrowBackIcon from "@icons/arrow_back_FILL0_wght400_GRAD0_opsz24.svg?react";

interface Props {
  name: string;
  category: string;
  placeholder?: string;
  isGame?: boolean;
}

const pageParam = Astro.url.searchParams.get("page");
// default to first page
let page = pageParam === null ? 1 : parseInt(pageParam);
if (isNaN(page)) page = 1;
// visual offset by 1
page -= 1;

const sortOptions = [
  { name: "Most Popular", value: "mostPopular" },
  { name: "Least Popular", value: "leastPopular" },
  { name: "Name (A-Z)", value: "nameASC" },
  { name: "Name (Z-A)", value: "nameDES" },
];

const sortParam = Astro.url.searchParams.get("sort");
const sort =
  sortParam === null || !sortOptions.some((e) => e.value === sortParam)
    ? "mostPopular"
    : sortParam;

const { category } = Astro.props;

const data = await fetchData(theatreAPI, category, sort, page);

const { isGame } = Astro.props;
---

<main class={styles.main}>
  <TheatreSearchBar client:load />
  <section>
    <h1 class="page-title sub">
      {
        isGame && (
          <a class="back-button" href="/theatre/" set:html={ArrowBackIcon} />
        )
      }
      {Astro.props.name}
      <ThemeSelect
        options={sortOptions}
        id="sort"
        value={typeof sort === "string" &&
        ["mostPopular", "leastPopular", "nameASC", "nameDES"].includes(sort)
          ? sort
          : undefined}
      />
    </h1>
    <TheatreCategoryView
      category={category}
      initPage={page}
      initSort={sort}
      initData={data}
      client:only="preact"
    />
  </section>
</main>

<ClientAPIs />
