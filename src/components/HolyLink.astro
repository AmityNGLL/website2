---
import CryptoJS from "crypto-js";

type Props = astroHTML.JSX.IntrinsicElements["div"] & {
  href: string;
  target?: string;
};

const { href, target, ...props } = Astro.props;
---

<span
  {...props}
  data-target={target}
  data-eclink={CryptoJS.AES.encrypt(href, Astro.locals.clientKey)}
>
  <slot />
</span>
<script>
  import { holyDecrypt } from "@lib/holyDecrypt";

  const parseLinks = () => {
    for (const s of document.querySelectorAll<HTMLSpanElement>(
      "[data-eclink]"
    )) {
      const eclink = s.getAttribute("data-eclink")!;
      const href = holyDecrypt(eclink);
      const target = s.getAttribute("data-target");

      s.addEventListener("mouseup", (event) => {
        if (event.button === 1) {
          event.preventDefault();
          window.open(href, "_blank");
        }
      });

      s.addEventListener("click", (event) => {
        event.preventDefault();

        if (event.ctrlKey) {
          window.open(href, "_blank");
        } else {
          window.open(href, target === null ? "_self" : target);
        }
      });
    }
  };
  parseLinks();
  document.addEventListener("astro:page-load", parseLinks);
</script>
