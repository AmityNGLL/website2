---
import SettingsLayout from "@layouts/SettingsLayout.astro";
import themeStyles from "@styles/ThemeElements.module.scss";
import styles from "@styles/Settings.module.scss";
import Check from "@icons/check_24dp.svg?svgmin";
---

<SettingsLayout>
  <Fragment slot="head">
    <title>Tab Cloak Settings</title>
  </Fragment>
  <section>
    <p>
      Tab Masking allows you to disguise Holy Unblocker as any website such as
      your school's home page, new tab, etc.
    </p>
    <div>
      <p>URL</p>
      <form id="form">
        <div class:list={[themeStyles.ThemeInputBar, styles.ThemeInputBar]}>
          <input
            class={themeStyles.themePadRight}
            id="cloakinput"
            placeholder="https://example.org/"
          />
          <button type="submit">
            <Check class:list={[themeStyles.button, themeStyles.right]} />
          </button>
        </div>
      </form>
    </div>
    <div>
      <button class={themeStyles.ThemeButton} id="resetButton"
        >Reset mask</button
      >
    </div>
  </section>
  <script>
    import { extractData } from "@lib/mask";
    import { createNotification } from "@lib/notifications";
    import { globalCloakSettings } from "@lib/storage";

    const input = document.querySelector<HTMLInputElement>("#cloakinput")!;

    input.value = globalCloakSettings.get("url");

    const resetButton =
      document.querySelector<HTMLButtonElement>("#resetButton")!;

    resetButton.addEventListener("click", () => {
      globalCloakSettings.set("icon", "");
      globalCloakSettings.set("title", "");
      globalCloakSettings.set("url", "");
      input.value = "";
    });

    const form = document.querySelector<HTMLFormElement>("#form")!;
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      createNotification({
        description: "Loading mask...",
        type: "info",
      });
      try {
        const data = await extractData(input.value);
        input.value = data.url;
        globalCloakSettings.set("icon", data.icon);
        globalCloakSettings.set("title", data.title);
        globalCloakSettings.set("url", data.url);

        createNotification({
          description: "Mask successfully set.",
          type: "success",
        });
      } catch (err) {
        console.error(err);

        createNotification({
          title: "Failure loading mask.",
          description: err instanceof Error ? err.message : "Unknown Error",
          type: "error",
        });
      }
    });
  </script>
</SettingsLayout>
